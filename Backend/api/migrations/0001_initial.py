# Generated by Django 5.2.7 on 2025-10-07 08:39

import django.db.models.deletion
import pgvector.django.vector
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('entity_id', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=108)),
                ('role', models.CharField(choices=[('student', 'Student'), ('faculty', 'Faculty'), ('staff', 'Staff')], default='student', max_length=21)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('department', models.CharField(blank=True, max_length=108, null=True)),
                ('student_id', models.CharField(blank=True, max_length=108, null=True)),
                ('staff_id', models.CharField(blank=True, max_length=108, null=True)),
                ('card_id', models.CharField(blank=True, max_length=108, null=True, unique=True)),
                ('face_id', models.CharField(blank=True, max_length=108, null=True, unique=True)),
                ('device_hash', models.CharField(blank=True, max_length=108, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'profiles',
                'constraints': [models.CheckConstraint(condition=models.Q(models.Q(('student_id__isnull', False), ('staff_id__isnull', True)), models.Q(('student_id__isnull', True), ('staff_id__isnull', False)), _connector='OR'), name='either_student_or_faculty'), models.UniqueConstraint(condition=models.Q(('student_id__isnull', False)), fields=('student_id',), name='unique_student_id'), models.UniqueConstraint(condition=models.Q(('staff_id__isnull', False)), fields=('staff_id',), name='unique_staff_id')],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('event_id', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('location', models.CharField(blank=True, max_length=120, null=True)),
                ('timestamp', models.DateTimeField()),
                ('confidence', models.FloatField(default=1)),
                ('event_type', models.CharField(choices=[('wifi_logs', 'WiFiLogs'), ('cctv_frames', 'CCTVFrames'), ('lab_booking', 'LabBooking'), ('card_swipes', 'CardSwipes'), ('library_checkouts', 'LibraryCheckouts'), ('text_notes', 'TextNotes')], max_length=108)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('entity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to='api.profile')),
            ],
            options={
                'db_table': 'events',
            },
        ),
        migrations.CreateModel(
            name='WifiLogs',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('device_hash', models.CharField(blank=True, max_length=108, null=True)),
                ('ap_id', models.CharField(max_length=108)),
                ('timestamp', models.DateTimeField()),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wifi_logs', to='api.event')),
            ],
            options={
                'db_table': 'wifi_logs',
            },
        ),
        migrations.CreateModel(
            name='CCTVFrame',
            fields=[
                ('frame_id', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('location_id', models.CharField(blank=True, max_length=108, null=True)),
                ('timestamp', models.DateTimeField()),
                ('face_id', models.CharField(blank=True, max_length=108, null=True)),
                ('raw', models.JSONField(blank=True, default=dict)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cctv_frames', to='api.event')),
            ],
            options={
                'db_table': 'cctv_frames',
                'indexes': [models.Index(fields=['face_id', 'timestamp'], name='cctv_frames_face_id_63a9ba_idx'), models.Index(fields=['location_id', 'timestamp'], name='cctv_frames_locatio_10abfb_idx')],
            },
        ),
        migrations.CreateModel(
            name='CardSwipe',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('card_id', models.CharField(max_length=108)),
                ('location_id', models.CharField(max_length=108)),
                ('timestamp', models.DateTimeField()),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='card_swipes', to='api.event')),
            ],
            options={
                'db_table': 'card_swipes',
                'indexes': [models.Index(fields=['card_id', 'timestamp'], name='card_swipes_card_id_7109da_idx'), models.Index(fields=['location_id', 'timestamp'], name='card_swipes_locatio_d88af9_idx')],
                'constraints': [models.UniqueConstraint(fields=('card_id', 'timestamp'), name='unique_card_swipe_id')],
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('note_id', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('category', models.CharField(blank=True, max_length=64, null=True)),
                ('text', models.TextField()),
                ('timestamp', models.DateTimeField()),
                ('embedding', pgvector.django.vector.VectorField(blank=True, dimensions=768, null=True)),
                ('embedding_model', models.CharField(blank=True, max_length=128, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='api.event')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='api.profile')),
            ],
            options={
                'db_table': 'notes',
                'indexes': [models.Index(fields=['entity', 'timestamp'], name='notes_entity__76cbbf_idx')],
            },
        ),
        migrations.CreateModel(
            name='LibraryCheckout',
            fields=[
                ('checkout_id', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('book_id', models.CharField(max_length=108)),
                ('timestamp', models.DateTimeField()),
                ('raw', models.JSONField(blank=True, default=dict)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='library_checkout', to='api.event')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='library_checkout', to='api.profile')),
            ],
            options={
                'db_table': 'library_checkouts',
                'indexes': [models.Index(fields=['entity', 'timestamp', 'checkout_id', 'book_id'], name='library_che_entity__518b9e_idx')],
            },
        ),
        migrations.CreateModel(
            name='LabBooking',
            fields=[
                ('booking_id', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('room_id', models.CharField(max_length=108)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('attended', models.BooleanField(default=True)),
                ('raw', models.JSONField(blank=True, default=dict)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lab_bookings', to='api.event')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lab_bookings', to='api.profile')),
            ],
            options={
                'db_table': 'lab_bookings',
                'indexes': [models.Index(fields=['entity', 'room_id', 'start_time', 'end_time', 'attended'], name='lab_booking_entity__633c10_idx')],
            },
        ),
        migrations.CreateModel(
            name='FaceEmbedding',
            fields=[
                ('face_id', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('embedding', pgvector.django.vector.VectorField(blank=True, dimensions=512, null=True)),
                ('embedding_model', models.CharField(blank=True, max_length=128, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='face_embeddings', to='api.profile')),
            ],
            options={
                'db_table': 'face_embeddings',
                'indexes': [models.Index(fields=['profile'], name='face_embedd_profile_ebd21d_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['entity', 'timestamp'], name='events_entity__8208a7_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['event_type', 'timestamp'], name='events_event_t_0b2cb0_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['timestamp'], name='events_timesta_ba2f67_idx'),
        ),
        migrations.AddIndex(
            model_name='wifilogs',
            index=models.Index(fields=['device_hash', 'timestamp'], name='wifi_logs_device__b2deb9_idx'),
        ),
        migrations.AddIndex(
            model_name='wifilogs',
            index=models.Index(fields=['ap_id', 'timestamp'], name='wifi_logs_ap_id_dc9757_idx'),
        ),
        migrations.AddConstraint(
            model_name='wifilogs',
            constraint=models.UniqueConstraint(fields=('device_hash', 'timestamp'), name='unique_wifi_timestamp'),
        ),
    ]
